{"version":3,"sources":["components/QuoteCard.js","constants/colorArray.js","App.js","reportWebVitals.js","index.js","components/QuoteCard.module.css","App.module.css"],"names":["QuoteCard","props","text","author","component","className","classes","Math","random","colorArray","backgroundColor","App","useState","quote","setQuote","quotes","setQuotes","background","color","setColor","colorRef","useRef","a","fetch","response","json","data","transformedQuotes","map","quoteData","current","newIndex","array","floor","length","newColors","useCallback","colors","currentColor","filter","ele","useEffect","quoteGrabber","quoteIndex","newColor","colorIndex","interval","setInterval","clearInterval","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.630cd21e.chunk.js","sourcesContent":["import classes from './QuoteCard.module.css';\r\n\r\nconst QuoteCard = (props) => {\r\n  if (!props.text && !props.author) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div\r\n      component=\"div\"\r\n      className={classes['quote-card']}\r\n      key={Math.random()}\r\n    >\r\n      <p className={classes['quote-text']}>\r\n        <span className={classes['quote-sign']}>&ldquo;</span>\r\n        {props.text}\r\n        <span className={classes['quote-sign']}>&rdquo;</span>\r\n      </p>\r\n      {\r\n        <p className={classes['quote-author']}>\r\n          {props.author ? ' - ' + props.author : '- Unknown'}\r\n        </p>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteCard;\r\n","export const colorArray = [\r\n  {\r\n    backgroundColor: ` rgb(255, 199, 199)`,\r\n  },\r\n  {\r\n    backgroundColor: ` rgb(255, 219, 199)`,\r\n  },\r\n  {\r\n    backgroundColor: ` rgb(255, 237, 199)`,\r\n  },\r\n  {\r\n    backgroundColor: ` rgb(238, 255, 199)`,\r\n  },\r\n  {\r\n    backgroundColor: ` rgb(199, 255, 199)`,\r\n  },\r\n  {\r\n    backgroundColor: ` rgb(199, 255, 232)`,\r\n  },\r\n  {\r\n    backgroundColor: ` rgb(199, 230, 255)`,\r\n  },\r\n  {\r\n    backgroundColor: ` rgb(199, 200, 255)`,\r\n  },\r\n  {\r\n    backgroundColor: ` rgb(234, 199, 255)`,\r\n  },\r\n  {\r\n    backgroundColor: ` rgb(255, 199, 220)`,\r\n  },\r\n  {\r\n    backgroundColor: ` white`,\r\n  },\r\n];\r\n","import { useState, useEffect, useCallback, useRef } from 'react';\n\nimport QuoteCard from './components/QuoteCard';\nimport { colorArray } from './constants/colorArray';\nimport classes from './App.module.css';\n\nfunction App() {\n  const [quote, setQuote] = useState();\n  const [quotes, setQuotes] = useState([]);\n  const [color, setColor] = useState({\n    background: ` white`,\n  });\n  const colorRef = useRef();\n\n  // Storing the current state in a ref avoids\n  // the useEffect functions from being called\n  // whenever the color state changes, while\n  // also avoiding warnings from missing useEffect\n  // dependencies.\n  colorRef.current = color;\n\n  async function quoteGrabber() {\n    const response = await fetch('https://type.fit/api/quotes');\n    const data = await response.json();\n    const transformedQuotes = data.map((quoteData) => {\n      return { author: quoteData.author, text: quoteData.text };\n    });\n    setQuotes(transformedQuotes);\n  }\n\n  const newIndex = (array = []) => {\n    return Math.floor(Math.random() * array.length);\n  };\n\n  const newColors = useCallback(\n    (\n      colors = [{ background: ` rgb(255, 199, 199)` }],\n      currentColor\n    ) => {\n      return colors // Filters out the current color from array\n        .filter((ele) => ele !== currentColor)\n        .map((ele) => ele);\n    },\n    []\n  );\n\n  // Fetches and stores api data in array when component mounts\n  useEffect(() => {\n    quoteGrabber();\n  }, []);\n\n  // Sets an initial quote and color upon mounting\n  useEffect(() => {\n    const quoteIndex = newIndex(quotes);\n    const newColor = newColors(colorArray, colorRef);\n    const colorIndex = newIndex(newColor);\n\n    setQuote(quotes[quoteIndex]);\n    setColor(newColor[colorIndex]);\n  }, [quotes, newColors]);\n\n  // Changes quote and color every 15s, runs once upon mounting\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const quoteIndex = newIndex(quotes);\n      const newColor = newColors(colorArray, colorRef);\n      const colorIndex = newIndex(newColor);\n\n      setQuote(quotes[quoteIndex]);\n      setColor(newColor[colorIndex]);\n    }, 15000);\n    return () => clearInterval(interval);\n  }, [quotes, newColors]);\n\n  return (\n    <div className={classes.background} style={color}>\n      {quote && (\n        <QuoteCard\n          author={quote.author}\n          text={quote.text}\n          colors={colorArray}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote-card\":\"QuoteCard_quote-card__3px6J\",\"quote-text\":\"QuoteCard_quote-text__1V97A\",\"fadeIn\":\"QuoteCard_fadeIn__3RIKt\",\"quote-author\":\"QuoteCard_quote-author__3hcYH\",\"quote-sign\":\"QuoteCard_quote-sign__3BZup\",\"item-enter\":\"QuoteCard_item-enter__2oETi\",\"item-enter-active\":\"QuoteCard_item-enter-active__3dXCz\",\"item-leave\":\"QuoteCard_item-leave__22I_4\",\"item-leave-active\":\"QuoteCard_item-leave-active__yXKk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__39aAA\"};"],"sourceRoot":""}